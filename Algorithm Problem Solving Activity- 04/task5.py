# -*- coding: utf-8 -*-
"""CSE221_Lab-04_Task-05.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DkX-XwfqusuzqAsVXFyV_7ipX7E7ludO
"""

#Task- 05
file = open("input5_4.txt", "r")
output_file = open("output5_4.txt", "a")
N, M, Destination = map(int, file.readline().split())
Adj_list = {}
for j in range(1, N+1):
  Adj_list[j] = []

for k in range(M):
  u, v = map(int, file.readline().split())
  Adj_list[u].append(v)
  Adj_list[v].append(u)

def shortest_path(G, s, d):
  visited = [False] * (len(G) + 1)
  dest = [0] * (len(G) + 1)
  queue = [s]
  visited[s] = True

  while queue:
    city = queue.pop(0)
    for i in G[city]:
      if visited[i] != True:
        visited[i] = True
        queue.append(i)
        dest[i] = city

  path = [d]
  while dest[d] != 0:
    d = dest[d]
    path.append(d)

  path.reverse()

  return path

path = shortest_path(Adj_list, 1, Destination)

output_file.write(f"Time: {len(path)-1}\n")
output_file.write("Shortest Path: " + " ".join(map(str, path)) + "\n")

file.close()
output_file.close()
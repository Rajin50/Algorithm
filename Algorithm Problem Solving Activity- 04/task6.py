# -*- coding: utf-8 -*-
"""CSE221_Lab-04_Task-06.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gaOJ7HMIsyzlPhHuzzq398PCBpsReujl
"""

#Task- 06
file = open("input6_2.txt", "r")
output_file = open("output6_2.txt", "a")
R, H = map(int, file.readline().split())
grid = []
for j in range(R):
  grid.append(file.readline().strip())

def DFS_counter(g, v, r, c):
  if r < 0 or r >= len(g) or c < 0 or c >= len(g[0]) or v[r][c] or g[r][c] == "#":
    return 0

  v[r][c] = True
  count = 0
  if g[r][c] == 'D':
    count += 1

  count += DFS_counter(g, v, r + 1, c)
  count += DFS_counter(g, v, r - 1, c)
  count += DFS_counter(g, v, r, c + 1)
  count += DFS_counter(g, v, r, c - 1)

  return count

def max_diamonds_counter(g):
  r, c = len(g), len(g[0])
  max_collected = 0

  for i in range(r):
    for j in range(c):
      if g[i][j] == ".":
        visited = [[False] * c for i in range(r)]
        C = DFS_counter(g, visited, i, j)
        max_collected = max(max_collected, C)

  return max_collected

M = max_diamonds_counter(grid)
output_file.write(str(M))

file.close()
output_file.close()
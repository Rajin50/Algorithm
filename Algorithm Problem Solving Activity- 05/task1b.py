# -*- coding: utf-8 -*-
"""CSE221_Lab-05_Task_01(B).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w9XVjR68wJIewyvt10Ahh3fIQ_laWrUy
"""

#Task- 01 B
file = open('input1b_2.txt', 'r')
output_file = open('output1b_2.txt','a')

N, M = map(int, file.readline().split())
course =[]
for i in range(M):
  course.append(tuple(map(int, file.readline().split())))

def BFS_Order(N, prereq_course):
  G = []
  count = [0] * (N+1)
  for i in range(N+1):
    G.append([])

  for j, k in prereq_course:
    G[j].append(k)
    count[k] += 1

  queue = []
  for l in range(1, N+1):
    if count[l] == 0:
      queue.append(l)

  sequence = []
  while queue:
    n = queue.pop(0)
    sequence.append(n)
    for i in G[n]:
      count[i] -= 1
      if count[i] == 0:
        queue.append(i)

  if len(sequence) != N:
    r = "IMPOSSIBLE"
    return r

  return sequence

course_order = BFS_Order(N, course)

if course_order == "IMPOSSIBLE":
  output_file.write("IMPOSSIBLE")
else:
  for r in course_order:
    output_file.write(str(r) + " ")

file.close()
output_file.close()
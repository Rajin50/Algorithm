# -*- coding: utf-8 -*-
"""CSE221_Lab-06_Task-02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VyZkGlkES6mYs9N_3VxoqtUumIu0LKbm
"""

#Task- 02
import heapq as heap
file = open("input2_3.txt", "r")
output_file = open("output2_3.txt", "w")
N, M = map(int, file.readline().split())
G = {i:[] for i in range(N+1)}
for i in range(M):
  u, v, w = map(int, file.readline().split())
  G[u].append((v, w))
S, T = map(int, file.readline().split())

def djikstra(G, s):
  D = [float('inf')]*len(G)
  D[s] = 0
  queue = []
  heap.heappush(queue, (D[s], s))
  before = [None]*len(G)
  visited = [False]*len(G)
  cost = 0

  while queue:
    num, u = heap.heappop(queue)
    if visited[u] == True:
      continue
    visited[u] = True
    for v, t in G[u]:
      ht = D[u] + t
      if ht < D[v]:
        D[v] = ht
        before[v] = u
        heap.heappush(queue, (D[v], v))

  D.pop(0)
  while float('inf') in D:
    index = D.index(float('inf'))
    D[index] = -1
  return D

R1 = djikstra(G, S)
R2 = djikstra(G, T)

T1 = float('inf')
vtx = float('inf')
for i in range(len(R1)):
  if R1[i] in [0,-1] or R2[i] in [0, -1]:
    continue
  T2 = max(R1[i], R2[i])
  if T2 < T1:
    T1 = T2
    vtx = i+1

if T1 == float('inf'):
    output_file.write("Impossible")
else:
    output_file.write("Time "+str(T1)+'\nNode '+str(vtx))

file.close()
output_file.close()